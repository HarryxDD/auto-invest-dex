/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MachineChef,
  MachineChefInterface,
} from "../../contracts/MachineChef";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "RegistryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "updatedAddress",
        type: "address",
      },
    ],
    name: "VaultUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "closeMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreateMachineParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreateMachineParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "createMachineAndDepositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreateMachineParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "createMachineAndDepositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "pauseMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract MachineRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "restartMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registryAddress",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "tryClosingPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minOut",
        type: "uint256",
      },
    ],
    name: "tryMakingDCASwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.UpdateMachineParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "updateMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract MachineVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234620000c6576000549060ff8260081c1662000074575060ff8082160362000038575b604051613e839081620000cc8239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000028565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c9081630b2167ca146126c95750806331fb67c21461244057806333ad57e4146123e757806335d4b6f214611df95780633f4ba83a14611d07578063511ce96b14611c9b5780635c975abb14611c5a5780635cbfc2f714611c2d5780636817031b14611b7c578063715018a614611add57806377c7632114611a795780637b10399914611a2757806380d616811461181f5780638129fc1c146116095780638456cb59146115155780638da5cb5b146114c3578063941d261b14611211578063a91ee0dc14611163578063ac9650d814610ed8578063b678a87214610b2a578063c5b12bdf146108fc578063d749c294146108e5578063e29e28d314610277578063f2fde38b1461018a5763fbfa77cf1461013557600080fd5b3461018657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101865760209073ffffffffffffffffffffffffffffffffffffffff60fc54169051908152f35b5080fd5b50346101865760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576101c26129b0565b906101cb612a52565b73ffffffffffffffffffffffffffffffffffffffff8216156101f457506101f190612ad1565b80f35b608490517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5090346106aa576102873661290a565b949190926102936131ee565b73ffffffffffffffffffffffffffffffffffffffff908160fb5416928451957f983d27370000000000000000000000000000000000000000000000000000000087526020968781600481895afa80156106e75788908a906108b1575b88517f91d14854000000000000000000000000000000000000000000000000000000008152600481019190915233602482015291508180604481015b0381895afa9081156106e75790610349918a91610894575b50613474565b85517fc11bc90f000000000000000000000000000000000000000000000000000000008152876004820152878160249781806103888b8201898b612e53565b03915afa9081156106e7578991610877575b50156107f5576103e39886918560fc5416908a8451809d819582947f5b349746000000000000000000000000000000000000000000000000000000008452898b6004860161334b565b03925af19283156107eb57879888946107b6575b5060fb5486517f125167ef00000000000000000000000000000000000000000000000000000000815290821690888180610437898f898b6004860161334b565b0381855afa9081156107ac578a9161078f575b501561070d57889987519561045e87612bb9565b33875261046c368688612cb9565b928a880193845289880192835260608801918252803b156107095788978c8b81958e89968351998a9889977f576351e10000000000000000000000000000000000000000000000000000000089528660048a01525116604488015251606487016080905260c487016104dd916129f4565b925160848701525160a4860152848203917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9e8f840190870152601e8152017f4f50455241544f525f555044415445445f54524144494e475f53544154530000905201925af180156106e7579089916106f1575b505060fb54169185517f6be8bc2c0000000000000000000000000000000000000000000000000000000081528760048201528781806105938882018787612e53565b0381875afa9081156106e75789916106ba575b506105b5575b87600160655580f35b6105cf908651926105c584612b3e565b3384523691612cb9565b86820152600385820152813b156106b65786606081957f4f505f434f4e444954494f4e530000000000000000000000000000000000000088610666977f4f50455241544f525f434c4f5345445f504f434b45545f4455455f544f5f535482519c8d9a8b997ff2280f10000000000000000000000000000000000000000000000000000000008b528560048c015260448b01906133b9565b92898403968701908a0152602d8352820152015201925af19081156106ad5750610696575b8080808080806105ac565b61069f90612b89565b6106aa57803861068b565b80fd5b513d84823e3d90fd5b8680fd5b6106da9150883d8a116106e0575b6106d28183612bd5565b81019061325d565b386105a6565b503d6106c8565b87513d8b823e3d90fd5b6106fa90612b89565b610705578738610551565b8780fd5b8b80fd5b608488602d888a51927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4f7065726174696f6e206572726f723a2062757920636f6e646974696f6e206460448201527f6f6573206e6f74207265616368000000000000000000000000000000000000006064820152fd5b6107a69150893d8b116106e0576106d28183612bd5565b3861044a565b88513d8c823e3d90fd5b9093506107da919850853d87116107e4575b6107d28183612bd5565b810190613335565b97909792386103f7565b503d6107c8565b85513d89823e3d90fd5b6084876039878951927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4f7065726174696f6e206572726f723a20746865206d616368696e652069732060448201527f6e6f7420726561647920746f20706572666f726d2073776170000000000000006064820152fd5b61088e9150883d8a116106e0576106d28183612bd5565b3861039a565b6108ab9150893d8b116106e0576106d28183612bd5565b38610343565b5081813d83116108de575b6108c68183612bd5565b810103126108d9578761032b91516102ef565b600080fd5b503d6108bc565b82346106aa576101f16108f73661295f565b612fbb565b5090346106aa5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc928184360112610b265760043567ffffffffffffffff8111610b22576109509036906004016128dc565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517f80b443c30000000000000000000000000000000000000000000000000000000081528581806109a233888d60048501613275565b0381855afa9081156107eb578791610b05575b5015610a82576109d686978551946109cc86612b3e565b3386523691612cb9565b85840152600184840152803b15610a7e5785928385610a4a947f555345525f5245535441525445445f504f434b455400000000000000000000008251998a9788967ff2280f1000000000000000000000000000000000000000000000000000000000885285600489015260448801906133b9565b868103938401602488015260158152015201925af19081156106ad5750610a6e5750f35b610a7790612b89565b6106aa5780f35b8580fd5b6084858551907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602760248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420726573746172742060448201527f6d616368696e65000000000000000000000000000000000000000000000000006064820152fd5b610b1c9150863d88116106e0576106d28183612bd5565b386109b5565b8380fd5b8280fd5b5090346106aa57610b3a3661290a565b94919290610b466131ee565b73ffffffffffffffffffffffffffffffffffffffff8060fb5416968451927f819e8a3a000000000000000000000000000000000000000000000000000000008452602093848180610b9c338c8b60048501613275565b03818d5afa9081156106e7578991610ebb575b5015610e3857879884875180927fb3fd1da50000000000000000000000000000000000000000000000000000000082528260048301528180610bf68d60248301908d612e53565b03915afa9081156106e75791610c19610c57949289948c91610e1b575b506132aa565b8460fc5416908a8a8551968795869485937fb678a8720000000000000000000000000000000000000000000000000000000085528d6004860161334b565b03925af180156107eb5787918891610dfc575b508260fb541690865192610c7d84612bb9565b610c88368a89612cb9565b84523386850152878401526060830152803b1561070557610ce18891879383855195869485937f3da5f0ca000000000000000000000000000000000000000000000000000000008552826004860152604485019061336f565b7f555345525f434c4f5345445f504f534954494f4e0000000000000000000000008a858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260148152015201925af180156107eb57908791610de8575b5050610d689060fb541692845195610d5e87612b3e565b3387523691612cb9565b90840152600382840152803b15610de357610db5849391849284519586809481937ff2280f1000000000000000000000000000000000000000000000000000000000835260048301613403565b03925af19081156106ad5750610dcf575b50600160655580f35b610dd890612b89565b6106aa578038610dc6565b505050fd5b610df190612b89565b610a7e578538610d47565b9050610e159150853d87116107e4576107d28183612bd5565b38610c6a565b610e329150883d8a116106e0576106d28183612bd5565b38610c13565b6084848751907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603a60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f776e6572206973207060448201527f65726d697474656420666f7220746865206f7065726174696f6e0000000000006064820152fd5b610ed29150853d87116106e0576106d28183612bd5565b38610baf565b5090346106aa57602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576004359067ffffffffffffffff93848311610b225736602384011215610b22578260040135948511610b22576024808401956005963683838a1b880101116106b657610f5a8297959497612c16565b95610f6785519788612bd5565b8287527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610f9484612c16565b01865b818110611154575050855b89848210611025575050505050508051938080860192818752855180945283818801981b870101940192955b828710610fdb5785850386f35b909192938280611015837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08a6001960301865288516129f4565b9601920196019592919092610fce565b61104661103f87846110d7949d9a9b9d1b86010186612c2e565b3691612cb9565b8a808a519261105484612b3e565b602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c8b8501527f206661696c6564000000000000000000000000000000000000000000000000008c8501528a81519101305af43d1561114c573d906110bb82612c7f565b916110c88c519384612bd5565b82523d8d8b84013e5b30612d33565b6110e1828a612cf0565b526110ec8189612cf0565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111205760010197959497610fa2565b84897f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6060906110d1565b60608982018b01528901610f97565b50346101865760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101865773ffffffffffffffffffffffffffffffffffffffff6111b06129b0565b6111b8612a52565b1690817fffffffffffffffffffffffff000000000000000000000000000000000000000060fb54161760fb55519081527f482b97c53e48ffa324a976e2738053e9aff6eee04d8aac63b10e19411d869b8260203392a280f35b5090346106aa5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc928184360112610b26576004359167ffffffffffffffff8311610b22578260040161018080878636030112610a7e5773ffffffffffffffffffffffffffffffffffffffff60fb5416906112c7846112928580612c2e565b885193849283927fb612f866000000000000000000000000000000000000000000000000000000008452339160048501613275565b0381865afa9081156114b957889161149c575b5015611419578697823b15610705578588959186928251998a9788967f5cbf97eb0000000000000000000000000000000000000000000000000000000088528560048901526113298280612e03565b909160448a01526101c489019061133f92612e53565b9060248301356064890152604483013560848901526064830161136191612e92565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc8984030160a48a01526113959291612f1e565b608482013560c4880152906113b060e4880160a48301612f76565b6101446113c38882016101048401612f99565b6113d39161018489019101612f99565b858103928301602487015260128152017f555345525f5550444154455f504f434b45540000000000000000000000000000905201925af19081156106ad5750610a6e5750f35b6084848651907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603260248201527f4f7065726174696f6e206572726f723a20746865206d616368696e652069732060448201527f6e6f742061626c6520746f2075706461746500000000000000000000000000006064820152fd5b6114b39150853d87116106e0576106d28183612bd5565b386112da565b86513d8a823e3d90fd5b503461018657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101865760209073ffffffffffffffffffffffffffffffffffffffff609754169051908152f35b503461018657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101865761154c612a52565b60335460ff81166115ac577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589160017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00602093161760335551338152a180f35b606482517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b503461018657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657815460ff8160081c161590818092611812575b80156117fb575b15611778577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0080821660011785556116bb918361174a575b5060ff855460081c169061169d82613dc2565b6116a682613dc2565b603354166033556116b681613dc2565b613dc2565b6116c433612ad1565b8254906116ed60ff8360081c166116da81613dc2565b6116e381613dc2565b6001606555613dc2565b6116f5578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6020921684555160018152a138808280f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011785553861168a565b608483517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156116525750600160ff821614611652565b50600160ff82161061164b565b5090346106aa5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc928184360112610b265760043567ffffffffffffffff8111610b22576118739036906004016128dc565b909473ffffffffffffffffffffffffffffffffffffffff60fb541683517fe6068d010000000000000000000000000000000000000000000000000000000081528581806118c533888d60048501613275565b0381855afa9081156107eb578791611a0a575b5015611987576118ef86978551946109cc86612b3e565b85840152600384840152803b15610a7e5785928385611963947f555345525f434c4f5345445f504f434b455400000000000000000000000000008251998a9788967ff2280f1000000000000000000000000000000000000000000000000000000000885285600489015260448801906133b9565b868103938401602488015260128152015201925af19081156106ad5750610a6e5750f35b6084858551907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602560248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420636c6f7365206d6160448201527f6368696e650000000000000000000000000000000000000000000000000000006064820152fd5b611a219150863d88116106e0576106d28183612bd5565b386118d8565b503461018657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101865760209073ffffffffffffffffffffffffffffffffffffffff60fb54169051908152f35b8260207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106aa5760043567ffffffffffffffff811161018657611ac7611ad59136906004016128dc565b90611ad06131ee565b613722565b600160655580f35b82346106aa57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106aa57611b14612a52565b600073ffffffffffffffffffffffffffffffffffffffff6097547fffffffffffffffffffffffff00000000000000000000000000000000000000008116609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101865760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610186576004359073ffffffffffffffffffffffffffffffffffffffff8216809203610b2657611bd6612a52565b817fffffffffffffffffffffffff000000000000000000000000000000000000000060fc54161760fc55519081527f483bdedaaf23706a9800ac1af0d852b34927780d79f9d6ba60a80c7cad75ea3960203392a280f35b82611ad5611c54611c3d3661295f565b611c456131ee565b611c4e81612fbb565b80612c2e565b90613722565b503461018657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101865760209060ff6033541690519015158152f35b5034610186577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9081360112610186576004359067ffffffffffffffff8211610b26576102209082600401923603011261018657611cfe611ad591611c456131ee565b60243591613aa9565b503461018657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018657611d3e612a52565b60335460ff811615611d9c577f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006020921660335551338152a180f35b606482517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b5090346106aa57611e093661290a565b94919290611e156131ee565b73ffffffffffffffffffffffffffffffffffffffff908160fb541684517f983d2737000000000000000000000000000000000000000000000000000000008152602081600481855afa9081156114b95788916123b4575b5085517f91d148540000000000000000000000000000000000000000000000000000000081526004810191909152336024820152602081604481855afa9081156114b95790611ec191899161239b5750613474565b6020855180927fb3fd1da50000000000000000000000000000000000000000000000000000000082528260048301528180611f00602482018c8b612e53565b03915afa9081156107eb5791611f22611f5f999287948a9161238257506132aa565b8360fc541690888451809b819582947fb678a8720000000000000000000000000000000000000000000000000000000084528c8b6004860161334b565b03925af19586156123785785908697612356575b508160fb54169684517fd3fc80d900000000000000000000000000000000000000000000000000000000815260208180611fb385878c8b6004860161334b565b03818c5afa9081156114b9578891612337575b508551987f1416642e000000000000000000000000000000000000000000000000000000008a5260208a8061200186888d8c6004860161334b565b0381845afa998a156106e757899a612316575b5081821561230f575b1561228c578899612194575b50612094575b50506120469060fb5416918351946109cc86612b3e565b6020840152600382840152803b15610de357610db5849391849284519586809481937ff2280f1000000000000000000000000000000000000000000000000000000000835260048301613403565b8260fb5416908551926120a684612bb9565b6120b1368988612cb9565b8452336020850152868401526060830152803b156106b65761210b8791869383855195869485937f3da5f0ca000000000000000000000000000000000000000000000000000000008552826004860152604485019061336f565b7f4f50455241544f525f53544f505f4c4f535300000000000000000000000000006020858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260128152015201925af1801561218a579086911561202f5761217b90612b89565b61218657843861202f565b8480fd5b84513d88823e3d90fd5b8651906121a082612bb9565b6121ab368a89612cb9565b82523360208301528488830152836060830152803b15612288576122078a91899383855195869485937f3da5f0ca000000000000000000000000000000000000000000000000000000008552826004860152604485019061336f565b7f4f50455241544f525f54414b455f50524f4649540000000000000000000000006020858303927ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8401602488015260148152015201925af180156106e757908991612274575b50612029565b61227d90612b89565b61070557873861226e565b8980fd5b608487517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4f7065726174696f6e206572726f723a20636c6f73696e6720706f736974696f60448201527f6e20636f6e646974696f6e20646f6573206e6f742072656163680000000000006064820152fd5b508961201d565b612330919a5060203d6020116106e0576106d28183612bd5565b9838612014565b612350915060203d6020116106e0576106d28183612bd5565b38611fc6565b9050612370919650833d85116107e4576107d28183612bd5565b959038611f73565b83513d87823e3d90fd5b610e32915060203d6020116106e0576106d28183612bd5565b6108ab915060203d6020116106e0576106d28183612bd5565b90506020813d6020116123df575b816123cf60209383612bd5565b810103126108d957516020611e6c565b3d91506123c2565b5034610186577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106aa5760043567ffffffffffffffff811161018657612438611ad59136906004016128dc565b611cfe6131ee565b5090346106aa5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc928184360112610b265760043567ffffffffffffffff8111610b22576124949036906004016128dc565b909461249e6131ee565b73ffffffffffffffffffffffffffffffffffffffff8060fb541685855180927f7bc0394000000000000000000000000000000000000000000000000000000000825281806124f28d8a339160048501613275565b03915afa9081156107eb5787916126ac575b50156126295761251b86978551946109cc86612b9d565b858401528060fc5416803b156106b65786855180927f61a45ae6000000000000000000000000000000000000000000000000000000008252886004830152818381612569602482018b613d8f565b03925af180156107eb57908791612615575b505060fb5416803b15610a7e57859283856125eb947f555345525f57495448445245575f46554e4400000000000000000000000000008251998a9788967f0f0313890000000000000000000000000000000000000000000000000000000088528560048901526044880190613d8f565b868103938401602488015260128152015201925af19081156106ad5750610dcf5750600160655580f35b61261e90612b89565b610a7e57853861257b565b6084858551907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602d60248201527f4f7065726174696f6e206572726f723a2063616e6e6f7420776974686472617760448201527f206d616368696e652066756e64000000000000000000000000000000000000006064820152fd5b6126c39150863d88116106e0576106d28183612bd5565b38612504565b91905034610b26576020917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9083823601126121865760043567ffffffffffffffff8111610a7e5761271f9036906004016128dc565b9073ffffffffffffffffffffffffffffffffffffffff60fb5416927f9d92d73700000000000000000000000000000000000000000000000000000000815286818061276f33878760048501613275565b0381875afa9081156114b95788916128bf575b501561283c579061279c879493928651926105c584612b3e565b86820152600285820152813b15610b2257838561280e947f555345525f5041555345445f504f434b455400000000000000000000000000008251998a9788967ff2280f1000000000000000000000000000000000000000000000000000000000885285600489015260448801906133b9565b868103938401602488015260128152015201925af19081156106ad5750612833575080f35b6101f190612b89565b6084868651907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602560248201527f4f7065726174696f6e206572726f723a2063616e6e6f74207061757365206d6160448201527f6368696e650000000000000000000000000000000000000000000000000000006064820152fd5b6128d69150873d89116106e0576106d28183612bd5565b38612782565b9181601f840112156108d95782359167ffffffffffffffff83116108d957602083818601950101116108d957565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126108d9576004359067ffffffffffffffff82116108d957612953916004016128dc565b90916024359060443590565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc906020828201126108d9576004359167ffffffffffffffff83116108d95782610220920301126108d95760040190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036108d957565b359073ffffffffffffffffffffffffffffffffffffffff821682036108d957565b919082519283825260005b848110612a3e5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016129ff565b73ffffffffffffffffffffffffffffffffffffffff609754163303612a7357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6097549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617609755167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6060810190811067ffffffffffffffff821117612b5a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111612b5a57604052565b6040810190811067ffffffffffffffff821117612b5a57604052565b6080810190811067ffffffffffffffff821117612b5a57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612b5a57604052565b67ffffffffffffffff8111612b5a5760051b60200190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156108d9570180359067ffffffffffffffff82116108d9576020019181360383136108d957565b67ffffffffffffffff8111612b5a57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192612cc582612c7f565b91612cd36040519384612bd5565b8294818452818301116108d9578281602093846000960137010152565b8051821015612d045760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b91929015612dae5750815115612d47575090565b3b15612d505790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015612dc15750805190602001fd5b612dff906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906129f4565b0390fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156108d957016020813591019167ffffffffffffffff82116108d95781360383136108d957565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156108d957016020813591019167ffffffffffffffff82116108d9578160061b360383136108d957565b60041115612eef57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b918181526020809101929160009182905b828210612f3e57505050505090565b909192939485358152818601356004811015610a7e579081612f61600193612ee5565b81840152604090810196019493920190612f2f565b604090803583526020810135602084015201359060078210156108d95760400152565b803560048110156108d95760209181612fb28493612ee5565b84520135910152565b6020810180359173ffffffffffffffffffffffffffffffffffffffff928381168091036108d957330361316a578260fb5416803b156108d957604051937f10a106ef000000000000000000000000000000000000000000000000000000008552602060048601528061304c6130466130338680612e03565b61022060248b01526102448a0191612e53565b956129d3565b1660448601528061305f604085016129d3565b16606486015280613072606085016129d3565b166084860152613084608084016129d3565b1660a485015260a08201359160038310156108d9576000858094926131426131028498849660c486015260c084013560e486015260e08401356101048601526130d1610100850185612e92565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc87840301610124880152612f1e565b9161012081013561014485015261312161016485016101408301612f76565b6131336101c485016101a08301612f99565b6101e061020485019101612f99565b03925af1801561315e576131535750565b61315c90612b89565b565b6040513d6000823e3d90fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f496e76616c6964206d616368696e653a206f776e6572206d69736d617463686560448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b6002606554146131ff576002606555565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b908160209103126108d9575180151581036108d95790565b916132a360209273ffffffffffffffffffffffffffffffffffffffff92969596604086526040860191612e53565b9416910152565b156132b157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f4f7065726174696f6e206572726f723a20746865206d616368696e652069732060448201527f6e6f7420726561647920746f20636c6f736520706f736974696f6e00000000006064820152fd5b91908260409103126108d9576020825192015190565b906133659060409396959496606084526060840191612e53565b9460208201520152565b9060608061338684516080855260808501906129f4565b9373ffffffffffffffffffffffffffffffffffffffff602082015116602085015260408101516040850152015191015290565b9073ffffffffffffffffffffffffffffffffffffffff825116815260406133ef60208401516060602085015260608401906129f4565b920151906005821015612eef576040015290565b6134176060926040835260408301906133b9565b906020818303910152602481527f434c4f5345445f504f434b45545f4455455f544f5f504f534954494f4e5f434c60208201527f4f5345440000000000000000000000000000000000000000000000000000000060408201520190565b1561347b57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4f7065726174696f6e206572726f723a206f6e6c79206f70657261746f72206960448201527f73207065726d697474656420666f7220746865206f7065726174696f6e0000006064820152fd5b1561350657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f7065726174696f6e206572726f723a2063616e6e6f74206465706f736974006044820152fd5b519073ffffffffffffffffffffffffffffffffffffffff821682036108d957565b91908260409103126108d95760405161359d81612b9d565b8092805160048110156108d9578252602090810151910152565b90918183036101e081126108d9576135ce83613564565b936135db60208501613564565b936135e860408201613564565b93606082015160038110156108d9579360808301519360a08401519360c08101519360607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060e08401519501126108d95760405161364581612b3e565b610100830151815261012083015160208201526101408301519060078210156108d95761368a916040820152936101a0613683826101608701613585565b9401613585565b90565b90606073ffffffffffffffffffffffffffffffffffffffff808451168352816136c560208601516080602087015260808601906129f4565b946040810151604086015201511691015290565b6136eb6040928383528383019061368d565b906020818303910152601381527f555345525f4445504f53495445445f46554e440000000000000000000000000060208201520190565b6000913415613a4b5773ffffffffffffffffffffffffffffffffffffffff918260fb5416926040938451927f4418eb00000000000000000000000000000000000000000000000000000000008452602091600494838180613787338b888c8501613275565b0381855afa9081156139d957906137a5918a91613a2e575b506134ff565b865180917fe058d72400000000000000000000000000000000000000000000000000000000825284878301526101e092839181806137e7602482018d8a612e53565b03915afa9182156139d957908592918a926139f6575b50501690813b156107055786517fd0e30db00000000000000000000000000000000000000000000000000000000081528881878134875af180156139d9576139e3575b5060fc5487517f095ea7b300000000000000000000000000000000000000000000000000000000815290851673ffffffffffffffffffffffffffffffffffffffff1686820190815234602082015284908290819060400103818c875af180156139d957906138c592916139bc575b508751966138bb88612bb9565b3388523691612cb9565b82860152348686015260608501528160fc541690813b156106b657869086519283917f8b6a70c40000000000000000000000000000000000000000000000000000000083528683015281838161391e602482018b61368d565b03925af180156139b25790869161399e575b505060fb541690813b156121865791849184938361397996518097819582947f55f512f700000000000000000000000000000000000000000000000000000000845283016136d9565b03925af19081156106ad575061398d575050565b6139978291612b89565b6106aa5750565b6139a790612b89565b612186578438613930565b85513d88823e3d90fd5b6139d290853d87116106e0576106d28183612bd5565b50386138ae565b88513d8b823e3d90fd5b6139ef90989198612b89565b9638613840565b613a159250803d10613a27575b613a0d8183612bd5565b8101906135b7565b505050505050505050905038806137fd565b503d613a03565b613a459150853d87116106e0576106d28183612bd5565b3861379f565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f7065726174696f6e206572726f723a20696e76616c696420616d6f756e74006044820152fd5b9060fb549260009373ffffffffffffffffffffffffffffffffffffffff8091166040948551937f4418eb00000000000000000000000000000000000000000000000000000000008552602092600495848180613b09338c898d8501613275565b0381855afa908115613d465790613b26918b91613d5057506134ff565b875180917fe058d72400000000000000000000000000000000000000000000000000000000825285888301526101e09283918180613b698d60248301908b612e53565b03915afa918215613d4657908692918b92613d67575b5050169187517f23b872dd000000000000000000000000000000000000000000000000000000008152338782015230602482015282604482015284816064818d885af1908115613d465790613bda918b91613d5057506134ff565b613c3984838760fc54168b5193849283927f095ea7b30000000000000000000000000000000000000000000000000000000084528c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03818d885af18015613d465790613c679291613d29575b50885197613c5d89612bb9565b3389523691612cb9565b838701528686015260608501528160fc541690813b156106b657869086519283917f8b6a70c400000000000000000000000000000000000000000000000000000000835286830152818381613cbf602482018b61368d565b03925af180156139b257613d16575b5060fb541690813b156121865791849184938361397996518097819582947f55f512f700000000000000000000000000000000000000000000000000000000845283016136d9565b613d2290959195612b89565b9338613cce565b613d3f90863d88116106e0576106d28183612bd5565b5038613c50565b89513d8c823e3d90fd5b613a459150863d88116106e0576106d28183612bd5565b613d7d9250803d10613a2757613a0d8183612bd5565b50505050505050505090503880613b7f565b906040602061368a9373ffffffffffffffffffffffffffffffffffffffff815116845201519181602082015201906129f4565b15613dc957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea2646970667358221220bf3bc37e3b45f3160ebaef0244a78556687c3c45387d6d14e3c5ef5f73b04df264736f6c63430008130033";

type MachineChefConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MachineChefConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MachineChef__factory extends ContractFactory {
  constructor(...args: MachineChefConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MachineChef & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MachineChef__factory {
    return super.connect(runner) as MachineChef__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MachineChefInterface {
    return new Interface(_abi) as MachineChefInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MachineChef {
    return new Contract(address, _abi, runner) as unknown as MachineChef;
  }
}
