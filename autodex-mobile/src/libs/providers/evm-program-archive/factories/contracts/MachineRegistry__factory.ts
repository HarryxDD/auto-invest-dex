/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MachineRegistry,
  MachineRegistryInterface,
} from "../../contracts/MachineRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "mintAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "AddressWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalDepositedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSwappedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedTargetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClosedPositionInTargetTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedFundInBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executedBatchAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextScheduledExecutionAt",
            type: "uint256",
          },
          {
            internalType: "enum Types.MachineStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Types.Machine",
        name: "machineData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "machineInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalDepositedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSwappedBaseAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedTargetAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalClosedPositionInTargetTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReceivedFundInBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetTokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executedBatchAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nextScheduledExecutionAt",
            type: "uint256",
          },
          {
            internalType: "enum Types.MachineStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Types.Machine",
        name: "machineData",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "machineUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPERATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedInteractiveAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "blacklistedIdMap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "getBalanceInfoOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "getOwnerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "getStopConditionsOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum Types.StopConditionOperator",
            name: "operator",
            type: "uint8",
          },
        ],
        internalType: "struct Types.StopCondition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "getTradingInfoOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum Types.AMMRouterVersion",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value1",
            type: "uint256",
          },
          {
            internalType: "enum Types.ValueComparisonOperator",
            name: "operator",
            type: "uint8",
          },
        ],
        internalType: "struct Types.ValueComparison",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "ammRouterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "baseTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "targetTokenAddress",
            type: "address",
          },
          {
            internalType: "enum Types.AMMRouterVersion",
            name: "ammRouterVersion",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.CreateMachineParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "initializeUserMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToClose",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToDeposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToPause",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToRestart",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isAbleToWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "isOwnerOf",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "isReadyToClosePosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "isReadyToSwap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "machines",
    outputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalDepositedBaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSwappedBaseAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReceivedTargetAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalClosedPositionInTargetTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalReceivedFundInBaseTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseTokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetTokenBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executedBatchAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextScheduledExecutionAt",
        type: "uint256",
      },
      {
        internalType: "enum Types.MachineStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "ammRouterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batchVolume",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frequency",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value1",
            type: "uint256",
          },
          {
            internalType: "enum Types.ValueComparisonOperator",
            name: "operator",
            type: "uint8",
          },
        ],
        internalType: "struct Types.ValueComparison",
        name: "openingPositionCondition",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "takeProfitCondition",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum Types.TradingStopConditionType",
            name: "stopType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct Types.TradingStopCondition",
        name: "stopLossCondition",
        type: "tuple",
      },
      {
        internalType: "enum Types.AMMRouterVersion",
        name: "ammRouterVersion",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
    ],
    name: "shouldCloseMachine",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "swappedBaseTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedTargetTokenAmount",
        type: "uint256",
      },
    ],
    name: "shouldOpenPosition",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "swappedTargetTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBaseTokenAmount",
        type: "uint256",
      },
    ],
    name: "shouldStopLoss",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "machineId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "swappedTargetTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "receivedBaseTokenAmount",
        type: "uint256",
      },
    ],
    name: "shouldTakeProfit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "batchVolume",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "enum Types.StopConditionOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.StopCondition[]",
            name: "stopConditions",
            type: "tuple[]",
          },
          {
            internalType: "uint256",
            name: "frequency",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "value0",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "value1",
                type: "uint256",
              },
              {
                internalType: "enum Types.ValueComparisonOperator",
                name: "operator",
                type: "uint8",
              },
            ],
            internalType: "struct Types.ValueComparison",
            name: "openingPositionCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "takeProfitCondition",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "enum Types.TradingStopConditionType",
                name: "stopType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct Types.TradingStopCondition",
            name: "stopLossCondition",
            type: "tuple",
          },
        ],
        internalType: "struct Params.UpdateMachineParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updateMachine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "swappedTargetTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivedBaseTokenAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Params.UpdateMachineClosingPositionStatsParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updateMachineClosingPositionStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
        ],
        internalType: "struct Params.UpdateMachineDepositParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updateMachineDepositStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "enum Types.MachineStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct Params.UpdateMachineStatusParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updateMachineStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "swappedBaseTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receivedTargetTokenAmount",
            type: "uint256",
          },
        ],
        internalType: "struct Params.UpdateMachineTradingStatsParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updateMachineTradingStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "actor",
            type: "address",
          },
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
        ],
        internalType: "struct Params.UpdateMachineWithdrawalParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "updateMachineWithdrawalStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "interactiveAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "whitelistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234620000c6576000549060ff8260081c1662000074575060ff8082160362000038575b6040516158be9081620000cc8239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13862000028565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe61024080604052600436101561001457600080fd5b60003560e01c90816301ffc9a714613b94575080630f03138914613a6557806310a106ef14612b32578063125167ef14612b165780631416642e14612afa5780632483e71514612aa1578063248a9ca314612a545780632f2ff15d1461296957806336568abe146128855780633da5f0ca146127415780633f4ba83a146126475780634418eb001461049757806355f512f714612582578063576351e1146123fb5780635c975abb146123ba5780635cbf97eb146117995780636be8bc2c1461173f5780636eb3df76146114cd578063715018a61461142f5780637bc039401461139b57806380b443c3146113075780638129fc1c14611059578063819e8a3a146110465780638456cb5914610f495780638da5cb5b14610ef75780638dea81e714610e8c57806391d1485414610e13578063983d273714610dba5780639888b5ab14610d275780639d92d73714610c92578063a217fddf14610c58578063a58b406914610b43578063a6ceadba14610b03578063b3fd1da514610a21578063b612f86614610497578063b9a45aac14610954578063bef48ddf146108d5578063c11bc90f1461078a578063d3fc80d914610764578063d547741f1461071a578063e058d724146104d8578063e256888f1461049c578063e6068d0114610497578063f2280f10146102fe5763f2fde38b1461020f57600080fd5b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957610246613cf6565b61024e614309565b73ffffffffffffffffffffffffffffffffffffffff8116156102755761027390614388565b005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040813601126102f95760043567ffffffffffffffff8082116102f9576060826004019383360301126102f9576024359081116102f957610369903690600401613c50565b6103749391936150f3565b61037d82614c10565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fdff3dc04e5be5d758e3cbf436c1eaac83caf9b19278dbb9a033498f210d28585602052604090205490919060ff16801561046d575b6103d9906156a5565b60248401604460206103eb8387614a6a565b9190826040519384928337810161012e8152030190209501359360058510156102f9578561044d610468936104477f9aeebd3e6539dabbb300ba0de981f7c2f70f8b51370ddd89595cb6834c191f0998600a6104559b01614eac565b83614a6a565b979092614c10565b9360405195869516983398429487615730565b0390a3005b506103d96104906104816024870186614a6a565b61048a87614c10565b9161440f565b90506103d0565b613df1565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f9576020604051620f42408152f35b346102f9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f957610528903690600401613c50565b919060405161053681613ef5565b6000815282810160009052604001600090528160405161055581613ed9565b6000815201600090528160405161056b81613ed9565b60008152016000905260405192808285378084019061012e91828152858573ffffffffffffffffffffffffffffffffffffffff97889303019020600b015416948060405183868237868185810187815203019020600c0154169060405183868237868185810187815203019020600d015416604051838682378681858101878152030190206019015460ff1660405184878237878186810188815203019020600e01549060405185888237888187810189815203019020600f0154926040518689823789818881018a8152030190206010015494604051878a82378a818981018b81520301902060090154968a604051828c823781818481018d8152030190206011019a6040518382823782818d868201908152030190206015019a836040519485938437820190815203019020601701986106a69061415b565b976106b090614199565b986106ba90614199565b996040519b8c528b015260408a0152606089016106d69161425a565b608088015260a087015260c086015260e085015261010084016106f891614220565b610160830161070691614242565b6101a0820161071491614242565b6101e090f35b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957610273610754613cd3565b61075c614309565b600435614267565b346102f957602061078061077736613c7e565b929190916148fb565b6040519015158152f35b346102f9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f9576107da903690600401613c50565b604051918181843760ff600a83850194868161012e97888152030190200154169060058210156108a6576001859214938461086e575b8461084c575b84610828575b82856040519015158152f35b6009945083604051948593843782019081520301902001544210158282818061081c565b9350600e60405184838237838186810188815203019020015442101593610816565b93506006604051848382378381868101888152030190200154600f604051858482378481878101898152030190200154111593610810565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f95773ffffffffffffffffffffffffffffffffffffffff600a6109466109406020943690600401613c50565b906143f5565b015460081c16604051908152f35b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95761098b613cf6565b602435908115158092036102f95773ffffffffffffffffffffffffffffffffffffffff906109b7614309565b16908160005261012d60205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff83161790556040519081527f8962d218b945501046dadd801583f3157c2c995f2dfa67789f7d6793a40e841d60203392a3005b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f957610a70903690600401613c50565b604051908083833760ff600a8284019360208161012e96878152030190200154169260058410156108a657600460209414159283610ae1575b83610abc575b5050506040519015158152f35b6007935090849183604051948593843782019081520301902001541515828080610aaf565b9250600e60405183838237858185810187815203019020015442101592610aa9565b346102f957602060ff610b2c82610b1936613fd3565b8160405193828580945193849201614030565b810161012f81520301902054166040519015158152f35b346102f9576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f957610b986109406014923690600401613c50565b01908154610ba58161444b565b90610bb36040519283613f2d565b8082528282018094600052836000206000915b838310610c205760408051878152865181890181905289928201908960005b828110610bf25784840385f35b909192826040600192828951805183520151610c0d8161418f565b8382015201960191019492919094610be5565b600286600192604051610c3281613ed9565b8554815260ff8587015416610c468161418f565b83820152815201920192019190610bc6565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957602060405160008152f35b346102f957610ca036613d83565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c169116149182610cf2575b6020836040519015158152f35b600a925060ff9360209183604051948593843782019081520301902001541660058110156108a6576001602091148280610ce5565b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f9576007610d7a6040923690600401613c50565b8351929160209082818637600683860195838161012e98898152030190200154948387519485938437820190815203019020015482519182526020820152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760206040517f523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c8152f35b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957610e4a613cd3565b60043560005260c960205273ffffffffffffffffffffffffffffffffffffffff60406000209116600052602052602060ff604060002054166040519015158152f35b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95773ffffffffffffffffffffffffffffffffffffffff610ed8613cf6565b1660005261012d602052602060ff604060002054166040519015158152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957602073ffffffffffffffffffffffffffffffffffffffff60fb5416604051908152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957610f80614309565b610f886153ca565b60335460ff8116610fe8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060019116176033557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152fd5b346102f957602061078061048a36613d83565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760005460ff90818160081c1615918280936112fb575b80156112e5575b15611261577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009183600184831617600055611232575b5061110f8160005460081c166110f0816157fd565b6110f9816157fd565b836033541660335561110a816157fd565b6157fd565b61111833614388565b6111358160005460081c1661112c816157fd565b61110a816157fd565b60016065553360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602052604090205416156111cc575b5061117757005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff600054166000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b3360008181527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be7566020526040812080549093166001179092559081907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a481611170565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001661010117600055836110db565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156110a557506001818316146110a5565b5060018183161061109e565b346102f95761131536613d83565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c169116149182611366576020836040519015158152f35b600a925060ff9360209183604051948593843782019081520301902001541660058110156108a6576002602091148280610ce5565b346102f9576113a936613d83565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c1691161491826113fa576020836040519015158152f35b600a925060ff9360209183604051948593843782019081520301902001541660058110156108a6576003602091148280610ce5565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957611466614309565b600073ffffffffffffffffffffffffffffffffffffffff60fb547fffffffffffffffffffffffff0000000000000000000000000000000000000000811660fb55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102f9576114db36613fd3565b60405181818093516020819301916114f292614030565b810161012e8152036020019020604051908161150e81836140a6565b036115199083613f2d565b600181015461018052600281015460c05260038101546101c0526004810154610160526005810154916006820154600783015460088401546009850154600a860154600b87015473ffffffffffffffffffffffffffffffffffffffff1691600c88015473ffffffffffffffffffffffffffffffffffffffff1693600d89015473ffffffffffffffffffffffffffffffffffffffff1695600e8a015497600f8b01549960108c01549b601181016115ce9061415b565b60a0526115dd60158201614199565b610100526115ed60178201614199565b610120526019015460ff1660e05260405180610140526103408091526101405101611617916141c3565b9b61018051610140516020015260c05161014051604001526101c05161014051606001526101605161014051608001526101405160a001526101405160c001526101405160e00152610140516101000152610140516101200152610140516101400160ff82169061168791614206565b60081c73ffffffffffffffffffffffffffffffffffffffff16610140516101600152610140516101800152610140516101a00152610140516101c00152610140516101e00152610140516102000152610140516102200152610140516102400160a051906116f491614220565b610140516102a001610100519061170a91614242565b610140516102e001610120519061172091614242565b610140516103200160e051906117359161425a565b6101405180910390f35b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043567ffffffffffffffff81116102f9576107806117936020923690600401613c50565b90614490565b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040813601126102f95767ffffffffffffffff600435116102f95761018090600435360301126102f95760243567ffffffffffffffff81116102f957611809903690600401613c50565b610200526118156150f3565b611823600480350180614a6a565b90600160ff6040518484823761012f8582015260208186810103019020541615150361235c57816020600a9273ffffffffffffffffffffffffffffffffffffffff946040519384928337810161012e815203019020015460081c16156122fe576020611893600480350180614a6a565b9190826040519384928337810161012e81520301902090600e8201544211156122db575b6118c8604460043501351515614b46565b6118d9608460043501351515614bab565b60005b6118f0606460043501600435600401614c31565b9050811015611930578061192661191e61192b93611918606460043501600435600401614c31565b90614c85565b351515614cc4565b614463565b6118dc565b5060e4600435013560078110156102f95780612277575b5060046101048135013510156102f957611967610104600435013561418f565b6101046004350135612260575b60046101448135013510156102f957611993610144600435013561418f565b6101446004350135612249575b6119b4606460043501600435600401614c31565b90600a8401549173ffffffffffffffffffffffffffffffffffffffff600b860154166101e0528473ffffffffffffffffffffffffffffffffffffffff600c8201541673ffffffffffffffffffffffffffffffffffffffff600d830154169060ff6019840154166102205260018301546101a05260038301546002840154906004850154600586015460068701549060078801549260088901549460098a015496611a7b611a82600e8d01549c611a6f60405180608052613ebc565b604051928380926140a6565b0382613f2d565b608051526101a05160206080510152604060805101526060608051015260808051015260a0608051015260c0608051015260e0608051015261010060805101526101206080510152600560ff871610156108a65773ffffffffffffffffffffffffffffffffffffffff8660ff611b679816610140608051015260081c1661016060805101526101e05161018060805101526101a060805101526101c060805101526101e06080510152604460043501356102006080510152608460043501356102206080510152611b583660a460043501614db4565b61024060805101523691614df0565b6102606080510152611b7f3661010460043501614e6e565b6102806080510152611b973661014460043501614e6e565b6102a06080510152611bb2610220516102c060805101614ea0565b6020611bc2600480350180614a6a565b9190826040519384928337810161012e815203019020916080515192835167ffffffffffffffff811161210857611bf98254614053565b601f8111612205575b506020601f8211600114612142578192939495600092612137575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161781555b6101406080516020810151600184015560408101516002840155606081015160038401556080810151600484015560a0810151600584015560c0810151600684015560e0810151600784015561010081015160088401556101208101516009840155015160058110156108a657611cca600a83019182614eac565b608051906101608201517fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b169116179055600b820173ffffffffffffffffffffffffffffffffffffffff61018083015116907fffffffffffffffffffffffff00000000000000000000000000000000000000009182825416179055600c830173ffffffffffffffffffffffffffffffffffffffff6101a08401511682825416179055600d83019073ffffffffffffffffffffffffffffffffffffffff6101c084015116908254161790556101e0810151600e830155610200810151600f83015561022081015160108301556102408101519081516011840155602082015160128401556040601384019201519160078310156108a6576102609260ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055015180519068010000000000000000821161210857601483015482601485015580831061206f575b506020016014830160005260206000206000915b8383106120125786866019876020601582016102806080510151908151611e8d8161418f565b611e968161418f565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055015160168201556020601782016102a06080510151908151611ee28161418f565b611eeb8161418f565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905501516018820155016102c0608051015160038110156108a65760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691161790557f9aeebd3e6539dabbb300ba0de981f7c2f70f8b51370ddd89595cb6834c191f0961200373ffffffffffffffffffffffffffffffffffffffff600a84015460081c1693611ff56020611fb6600435600401600435600401614a6a565b9190826040519384928337810161012e81520301902091611fe2604051966080885260808801906140a6565b9086820360208801526102005190614ee3565b908482036040860152614f35565b914260608201528033930390a3005b600260208260019351805186558285870191015161202f8161418f565b6120388161418f565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905501920192019190611e67565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80821682036120d957831683036120d9576014840160005260206000208360011b81015b8260011b820181106120c7575050611e53565b600080825560018201556002016120b4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b015190508580611c1d565b8260005260206000209060005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841681106121ed5750600193949596837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08116106121b6575b505050811b018155611c4f565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c191690558580806121a9565b9091602060018192858b01518155019301910161214f565b826000526020600020601f830160051c810160208410612242575b601f830160051c82018110612236575050611c02565b60008155600101612220565b5080612220565b61225b61016460043501351515614d4f565b6119a0565b61227261012460043501351515614d4f565b611974565b600581149081156122d0575b50156122ba576122a360a4600435013580151590816122a9575b50614d4f565b82611947565b905060c4600435013510158461229d565b6122cb60a460043501351515614d4f565b6122a3565b600691501483612283565b602460043501356122ee42821015614abb565b80600e84015560098301556118b7565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6d616368696e653a20696e76616c6964206d616368696e6500000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f49443a20746865206964206d75737420626520657869737465640000000000006044820152fd5b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957602060ff603354166040519015158152f35b346102f95761240936613d19565b6124116150f3565b61241a83614c10565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fdff3dc04e5be5d758e3cbf436c1eaac83caf9b19278dbb9a033498f210d28585602052604090205490919060ff16801561255e575b612476906156a5565b602084019260206124878587614a6a565b9190826040519384928337810161012e815203019020946124ac6010870154426148ee565b600987015560088601805490600182018092116120d9575560028601908154916124db604083013580946148ee565b905560038701948554956124f4606084013580986148ee565b90556006880180549384039384116120d95761254c977f9aeebd3e6539dabbb300ba0de981f7c2f70f8b51370ddd89595cb6834c191f09976104689561044d935561254460078c019182546148ee565b905583614a6a565b16966040519485943398429487615730565b5061247661257b6125726020870187614a6a565b61048a88614c10565b905061246d565b346102f9576104686104557f9aeebd3e6539dabbb300ba0de981f7c2f70f8b51370ddd89595cb6834c191f0973ffffffffffffffffffffffffffffffffffffffff6125cc36613d19565b916125d89691966150f3565b602081016125fa6125f56125ec8385614a6a565b61048a86614c10565b615772565b61044d60206126098385614a6a565b9190826040519384928337810161012e8152030190209160018301805490612636604087013580936148ee565b9055612544600685019182546148ee565b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95761267e614309565b6126866153ca565b60335460ff8116156126e3577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166033557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152fd5b346102f95761274f36613d19565b90916127596150f3565b602081019161276783614c10565b73ffffffffffffffffffffffffffffffffffffffff90811660009081527fdff3dc04e5be5d758e3cbf436c1eaac83caf9b19278dbb9a033498f210d28585602052604090205490919060ff16801561286d575b6127c3906156a5565b60206127cf8480614a6a565b9190826040519384928337810161012e8152030190209360048501908154916127fd604087013580946148ee565b905560058601805490612815606088013580936148ee565b9055612826600688019182546148ee565b9055600786019586549283039283116120d95761044d7f9aeebd3e6539dabbb300ba0de981f7c2f70f8b51370ddd89595cb6834c191f099661046894610455995580614a6a565b506127c361287e6125728580614a6a565b90506127ba565b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f9576128bc613cd3565b3373ffffffffffffffffffffffffffffffffffffffff8216036128e55761027390600435614267565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b346102f95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f9576004356129a3613cd3565b6129ab614309565b8160005260c960205273ffffffffffffffffffffffffffffffffffffffff60406000209116908160005260205260ff60406000205416156129e857005b8160005260c9602052604060002081600052602052604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a4005b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760043560005260c96020526020600160406000200154604051908152f35b346102f95760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f95760206040517fab4f864e5201b0fde9b5ee3e4cf96384802b0ffdfcf7f9de4699ce21a30afc4f8152f35b346102f9576020610780612b0d36613c7e565b92919091614742565b346102f9576020610780612b2936613c7e565b929190916145db565b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6020813601126102f95767ffffffffffffffff600435116102f95761022090600435360301126102f957612b8a6150f3565b612b98600480350180614a6a565b90604051908281833760ff8383019260208161012f95868152030190205416613a075760209183604051948593843782019081520301902060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055612c0b4260c460043501351015614abb565b612c1c60e460043501351515614b46565b612c2e61012460043501351515614bab565b73ffffffffffffffffffffffffffffffffffffffff612c51602460043501614c10565b16156139a95773ffffffffffffffffffffffffffffffffffffffff612c7a604460043501614c10565b16156139255773ffffffffffffffffffffffffffffffffffffffff612ca3604460043501614c10565b1660005261012d60205260ff60406000205416156138a15773ffffffffffffffffffffffffffffffffffffffff612cde606460043501614c10565b161561381d5773ffffffffffffffffffffffffffffffffffffffff612d07606460043501614c10565b1660005261012d60205260ff60406000205416156137995773ffffffffffffffffffffffffffffffffffffffff612d42608460043501614c10565b16156137155773ffffffffffffffffffffffffffffffffffffffff612d6b608460043501614c10565b1660005261012d60205260ff60406000205416156136915760005b612d9b61010460043501600435600401614c31565b9050811015612dc9578061192661191e612dc49361191861010460043501600435600401614c31565b612d86565b610184600435013560078110156102f9578061362b575b5060046101a48135013510156102f957612e006101a4600435013561418f565b6101a46004350135613614575b60046101e48135013510156102f957612e2c6101e4600435013561418f565b6101e460043501356135fd575b612e47600480350180614a6a565b612e55602460043501614c10565b90612e64604460043501614c10565b92612e73606460043501614c10565b92612e82608460043501614c10565b600360a4600435013510156102f95773ffffffffffffffffffffffffffffffffffffffff612f8f9581612ed798818096612ede612eca61010460043501600435600401614c31565b9a909b6040519e8f613ebc565b3691613f6e565b8c52600060208d0152600060408d0152600060608d0152600060808d0152600060a08d0152600060c08d0152600060e08d015260006101008d015260c460043501356101208d015260016101408d0152166101608b015216610180890152166101a0870152166101c085015260c460043501356101e085015260e460043501356102008501526101246004350135610220850152612f823661014460043501614db4565b6102408501523691614df0565b610260820152612fa5366101a460043501614e6e565b610280820152612fbb366101e460043501614e6e565b6102a0820152612fd560a460043501356102c08301614ea0565b6020612fe5600480350180614a6a565b919082604051938492833761012e8183015281010301902090805191825167ffffffffffffffff81116121085761301c8254614053565b601f81116135b9575b506020601f82116001146134f757819293946000926134ec575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8260011b9260031b1c19161781555b6020820151600182015560408201516002820155606082015160038201556080820151600482015560a0820151600582015560c0820151600682015560e082015160078201556101008201516008820155610120820151600982015561014082015160058110156108a6576130ea600a83019182614eac565b6101608301517fffffffffffffffffffffff0000000000000000000000000000000000000000ff74ffffffffffffffffffffffffffffffffffffffff0083549260081b169116179055600b810173ffffffffffffffffffffffffffffffffffffffff61018084015116907fffffffffffffffffffffffff00000000000000000000000000000000000000009182825416179055600c820173ffffffffffffffffffffffffffffffffffffffff6101a08501511682825416179055600d82019073ffffffffffffffffffffffffffffffffffffffff6101c085015116908254161790556101e0820151600e820155610200820151600f8201556102208201516010820155610240820151805160118301556020810151601283015560406013830191015160078110156108a65760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055610260820151805190680100000000000000008211612108576014830154826014850155808310613482575b506020016014830160005260206000206000915b83831061342557856102c06019876020601582016102808601519081516132a78161418f565b6132b08161418f565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055015160168201556020601782016102a08601519081516132fa8161418f565b6133038161418f565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055015160188201550191015160038110156108a65760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055613381600435600401600435600401614a6a565b907f167cec2e196c41309f0c25f30a41619069ba9ffbef725e75e5095a26b6a2279c73ffffffffffffffffffffffffffffffffffffffff6134146133c9602460043501614c10565b9361340660206133dd600480350180614a6a565b9190826040519384928337810161012e8152030190209160405197606089526060890191614ee3565b908682036020880152614f35565b9242604086015216928033930390a3005b60026020826001935180518655828587019101516134428161418f565b61344b8161418f565b60ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00835416911617905501920192019190613281565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80821682036120d957831683036120d9576014840160005260206000208360011b81015b8260011b820181106134da57505061326d565b600080825560018201556002016134c7565b01519050848061303f565b8260005260206000209060005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841681106135a157506001939495837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081161061356a575b505050811b018155613071565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c1916905584808061355d565b9091602060018192858a015181550193019101613504565b826000526020600020601f830160051c8101602084106135f6575b601f830160051c820181106135ea575050613025565b600081556001016135d4565b50806135d4565b61360f61020460043501351515614d4f565b612e39565b6136266101c460043501351515614d4f565b612e0d565b60058114908115613686575b501561366f576136576101446004350135801515908161365d5750614d4f565b80612de0565b9050610164600435013510158261229d565b61368161014460043501351515614d4f565b613657565b600691501481613637565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f416464726573733a20746172676574546f6b656e41646472657373206973206e60448201527f6f742077686974656c69737465640000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f416464726573733a20696e76616c696420746172676574546f6b656e4164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416464726573733a2062617365546f6b656e41646472657373206973206e6f7460448201527f2077686974656c697374656400000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416464726573733a20696e76616c69642062617365546f6b656e41646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f416464726573733a20616d6d526f7574657241646472657373206973206e6f7460448201527f2077686974656c697374656400000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f416464726573733a20696e76616c696420616d6d526f7574657241646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f416464726573733a20696e76616c6964206f776e6572000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f49443a20746865206964206973206e6f7420756e6971756500000000000000006044820152fd5b346102f9577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040813601126102f9576004359067ffffffffffffffff908183116102f9576040836004019184360301126102f9576024359182116102f95773ffffffffffffffffffffffffffffffffffffffff60246104687f9aeebd3e6539dabbb300ba0de981f7c2f70f8b51370ddd89595cb6834c191f0993613b11610455963690600401613c50565b939097613b1c6150f3565b01613b2d6125f56125ec8385614a6a565b61044d6020613b3c8385614a6a565b9190826040519384928337810161012e815203019020916000600684015560006007840155600a830160047fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905583614a6a565b346102f95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102f957600435907fffffffff0000000000000000000000000000000000000000000000000000000082168092036102f957817f7965db0b0000000000000000000000000000000000000000000000000000000060209314908115613c26575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483613c1f565b9181601f840112156102f95782359167ffffffffffffffff83116102f957602083818601950101116102f957565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102f9576004359067ffffffffffffffff82116102f957613cc791600401613c50565b90916024359060443590565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102f957565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102f957565b907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040818401126102f95760043567ffffffffffffffff918282116102f95760809082860301126102f957600401926024359182116102f957613d7f91600401613c50565b9091565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102f9576004359067ffffffffffffffff82116102f957613dcc91600401613c50565b909160243573ffffffffffffffffffffffffffffffffffffffff811681036102f95790565b346102f957613dff36613d83565b9060405191818484378183019261012e93848152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c169116149182613e8c575b82613e56576020836040519015158152f35b600a925060ff9360209183604051948593843782019081520301902001541660058110156108a657600460209114153880610ce5565b915060ff600a604051838682376020818581018781520301902001541660058110156108a6576003141591613e44565b6102e0810190811067ffffffffffffffff82111761210857604052565b6040810190811067ffffffffffffffff82111761210857604052565b6060810190811067ffffffffffffffff82111761210857604052565b6080810190811067ffffffffffffffff82111761210857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761210857604052565b92919267ffffffffffffffff82116121085760405191613fb660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184613f2d565b8294818452818301116102f9578281602093846000960137010152565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126102f9576004359067ffffffffffffffff82116102f957806023830112156102f95781602461402d93600401359101613f6e565b90565b60005b8381106140435750506000910152565b8181015183820152602001614033565b90600182811c9216801561409c575b602083101461406d57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691614062565b90600092918054916140b783614053565b91828252600193848116908160001461411957506001146140d9575b50505050565b90919394506000526020928360002092846000945b8386106141055750505050010190388080806140d3565b8054858701830152940193859082016140ee565b91505060209495507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009193501683830152151560051b010190388080806140d3565b9060405161416881613ef5565b60ff6002829480548452600181015460208501520154169060078210156108a65760400152565b600411156108a657565b906040516141a681613ed9565b60206001829460ff8154166141ba8161418f565b84520154910152565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936141ff81518092818752878088019101614030565b0116010190565b9060058210156108a65752565b9060078210156108a65752565b906040806142409380518452602081015160208501520151910190614213565b565b6020809180516142518161418f565b84520151910152565b9060038210156108a65752565b9060009180835260c960205273ffffffffffffffffffffffffffffffffffffffff6040842092169182845260205260ff6040842054166142a657505050565b80835260c960205260408320828452602052604083207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4565b73ffffffffffffffffffffffffffffffffffffffff60fb5416330361432a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60fb549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff000000000000000000000000000000000000000082161760fb55167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b602090826040519384928337810161012e81520301902090565b9080604051928337810161012e8152600a82602073ffffffffffffffffffffffffffffffffffffffff94859403019020015460081c1691161490565b67ffffffffffffffff81116121085760051b60200190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146120d95760010190565b906014604051918084843780830161012e94858252846020809681940301902095836040519485938437820190815203019020019182549182156145d257600093845b8481106144e257505050505090565b816000528260002060019082821b019060ff8183015416906145038261418f565b81156145b1576145128261418f565b811461458b576145218161418f565b600280821461457457506145348161418f565b600380911461454d57505061454890614463565b6144d3565b90879161454893989215614564575b505095614463565b860154905411159050388061455c565b886145489499939250921561456457505095614463565b5095614548919681156145a0575b5095614463565b905060088501549054111538614599565b505095614548919681156145c6575095614463565b90505442101538614599565b50505050600090565b909291926020604051928281853782840193828161012e96878152030190209383604051948593843782019081520301902092601184019160ff6013860154169360078510156108a65784156146fd57600f61463992015490614708565b81156146ce570491600381146146c657600481146146bd57600181146146b557600281146146ac57600581146146915760061461467857505050600190565b54811091821561468757505090565b6012015410919050565b505481101591826146a157505090565b601201541015919050565b50541115919050565b505410919050565b50541015919050565b505411919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b505050505050600190565b818102929181159184041417156120d957565b908160209103126102f9575160ff811681036102f95790565b604d81116120d957600a0a90565b906020604051928281853782840193828161012e9687815203019020938360405194859384378201908152030190209160ff601584015416906147848261418f565b81156148e4576147938261418f565b6001821461482457506147a58161418f565b6003811461480b57806147b960029261418f565b146147c657505050600090565b60020154908183111561480357818303928084116120d95782620f424080860295860414911417156120d95781156146ce57601601549104101590565b505050600090565b506002015460169091015461481f916148ee565b111590565b92939050602073ffffffffffffffffffffffffffffffffffffffff600d600494015416604051938480927f313ce5670000000000000000000000000000000000000000000000000000000082525afa80156148d85760ff61489291614898946000916148aa575b5016614734565b90614708565b9181156146ce57601601549104101590565b6148cb915060203d81116148d1575b6148c38183613f2d565b81019061471b565b3861488b565b503d6148b9565b6040513d6000823e3d90fd5b5050505050600090565b919082018092116120d957565b906020604051928281853782840193828161012e9687815203019020938360405194859384378201908152030190209160ff6017840154169061493d8261418f565b81156148e45761494c8261418f565b600182146149eb575061495e8161418f565b600381146149bb578061497260029261418f565b1461497f57505050600090565b600201549081831161480357828203928284116120d957620f42408085029485041490831417156120d95781156146ce57601801549104101590565b5060020154908183111592836149d2575b50505090565b820392509082116120d9576018015411153880806149cc565b92939050602073ffffffffffffffffffffffffffffffffffffffff600d600494015416604051938480927f313ce5670000000000000000000000000000000000000000000000000000000082525afa80156148d85760ff61489291614a58946000916148aa575016614734565b9181156146ce57601801549104111590565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102f9570180359067ffffffffffffffff82116102f9576020019181360383136102f957565b15614ac257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f54696d657374616d703a206d75737420626520657175616c206f72206772656160448201527f746572207468616e20626c6f636b2074696d65000000000000000000000000006064820152fd5b15614b4d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f426174636820766f6c756d653a2063616e6e6f74206265207a65726f000000006044820152fd5b15614bb257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4672657175656e63793a2063616e6e6f74206265207a65726f000000000000006044820152fd5b3573ffffffffffffffffffffffffffffffffffffffff811681036102f95790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1813603018212156102f9570180359067ffffffffffffffff82116102f957602001918160061b360383136102f957565b9190811015614c955760061b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b15614ccb57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f53746f70436f6e646974696f6e3a2076616c7565206d757374206e6f7420626560448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b15614d5657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f56616c7565436f6d70617269736f6e3a20696e76616c69642076616c756500006044820152fd5b91908260609103126102f957604051614dcc81613ef5565b60408193803583526020810135602084015201359060078210156102f95760400152565b929192614dfc8261444b565b604092614e0b84519283613f2d565b819581835260208093019160061b8401938185116102f957915b848310614e3457505050505050565b85838303126102f957855190614e4982613ed9565b83358252848401359060048210156102f957828692838a950152815201920191614e25565b91908260409103126102f957604051614e8681613ed9565b8092803560048110156102f9578252602090810135910152565b60038210156108a65752565b9060058110156108a65760ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008354169116179055565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b600160209160ff8154166141ba8161418f565b90614f476103608083528201836140a6565b916001908181015493602094858501526002928383015491604092838701526003840154606087015260048401546080870152600584015460a0870152600684015460c0870152600784015460e087015260088401546101008701526009840154610120870152600a8401549460ff95614fc76101408901888316614206565b73ffffffffffffffffffffffffffffffffffffffff809160081c1661016089015280600b8701541661018089015280600c870154166101a0890152600d860154166101c0880152600e8501546101e0880152600f85015461020088015260108501546102208801526011850154610240880152601285015461026088015261505a86601387015416610280890190614213565b60148501978783036102a089015280895493848152019860005280600020946000915b8483106150c3575050505050505082916019610340926150a76102c061402d970160158301614f22565b6150b8610300860160178301614f22565b01541691019061425a565b90919293948483889c8b848b819c5484520154166150e08161418f565b81860152019b019695949301919061507d565b3360009081527fababaf7989d9b96df7f991dae98f597c453af71e297bb6242f6602d99c1a6579602090815260408083205490927fab4f864e5201b0fde9b5ee3e4cf96384802b0ffdfcf7f9de4699ce21a30afc4f9160ff16156151575750505050565b61516033615530565b9184519061516d82613f11565b6042825284820192606036853782511561539d576030845382519060019182101561539d5790607860218501536041915b8183116152d25750505061527657604861527293869361523c9361522d98519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a8601526151f8815180928c603789019101614030565b8401917f206973206d697373696e6720726f6c6520000000000000000000000000000000603784015251809386840190614030565b01036028810187520185613f2d565b519283927f08c379a0000000000000000000000000000000000000000000000000000000008452600484015260248301906141c3565b0390fd5b6064848651907f08c379a000000000000000000000000000000000000000000000000000000000825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015615370577f3031323334353637383961626364656600000000000000000000000000000000901a61530f858761551f565b5360041c928015615343577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01919061519e565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526032600452fd5b3360009081527f81fe90a866a48a634a12852c1be675b683a22307409932a7443b8029347be756602090815260408083205490929060ff161561540c57505050565b61541533615530565b908084519061542382613f11565b6042825284820192606036853782511561539d576030845382519060019182101561539d5790607860218501536041915b8183116154ae5750505061527657604861527293869361523c9361522d98519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a8601526151f8815180928c603789019101614030565b909192600f81166010811015615370577f3031323334353637383961626364656600000000000000000000000000000000901a6154eb858761551f565b5360041c928015615343577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190615454565b908151811015614c95570160200190565b6040519061553d82613ef5565b602a8252602082016040368237825115614c9557603090538151600190811015614c9557607860218401536029905b8082116155da57505061557c5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015615677577f3031323334353637383961626364656600000000000000000000000000000000901a615616848661551f565b5360041c918015615649577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019061556c565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b156156ac57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4f7065726174696f6e206572726f723a206f7065726174696f6e206973206e6f60448201527f74207065726d69747465640000000000000000000000000000000000000000006064820152fd5b969594919260609461575161575f9361576d9660808c5260808c0191614ee3565b9189830360208b0152614ee3565b908682036040880152614f35565b930152565b1561577957565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5065726d697373696f6e3a206e6f74207065726d6974746564206f706572617460448201527f696f6e00000000000000000000000000000000000000000000000000000000006064820152fd5b1561580457565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fdfea2646970667358221220029e78171006942af8c5a09c73bf2dc1fb532ec50fde1e335099d8560e0f74e664736f6c63430008130033";

type MachineRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MachineRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MachineRegistry__factory extends ContractFactory {
  constructor(...args: MachineRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MachineRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MachineRegistry__factory {
    return super.connect(runner) as MachineRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MachineRegistryInterface {
    return new Interface(_abi) as MachineRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MachineRegistry {
    return new Contract(address, _abi, runner) as unknown as MachineRegistry;
  }
}
